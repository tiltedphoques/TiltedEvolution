name: Build windows

on:
  pull_request:
  push:
    branches:
      - master
      - bluedove
      - prerel
jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64]
        mode: [releasedbg]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1
        
    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: '2.9.3'

    # Install node
    #- name: Setup nodejs
    #  uses: actions/setup-node@v2
    #  with:
    #    cache: npm
    #    node-version: 16

    #- name: Update xmake repository
    #  run: xmake.exe repo --update

    #- name: Cache dependencies
    #  uses: actions/cache@v2
    #  with:
    #    path: C:\Users\runneradmin\AppData\Local\.xmake\packages
    #    key: v2-${{ runner.os }}-${{ matrix.arch }}-${{ matrix.mode }}-${{ hashFiles('xmake.lua') }}-${{ hashFiles('C:\Users\runneradmin\AppData\Local\.xmake\xmake.conf') }}-${{ hashFiles('C:\Users\runneradmin\AppData\Local\.xmake\repositories\**') }}

    #- name: Prepare npm
    #  run: npm install @semantic-release/github @semantic-release/exec conventional-changelog-conventionalcommits

    # Delete old releases
    #- name: Remove old releases
    #  uses: dev-drprasad/delete-older-releases@v0.2.0
    #  with:
    #    keep_latest: 1
    #    delete_tags: true
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    # Release version
    #- name: Release version
    #  run: npx semantic-release
    #  env:
    #    GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Configure xmake and install dependencies
      run: xmake.exe config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes --vs_sdkver=10.0.19041.0 -vD

    # Build the game
    - name: Build with xmake
      run: xmake.exe

    # Create install
    #- name: Bundle package
    #  run: xmake.exe install -o packaged

    # Upload artifacts
    #- uses: actions/upload-artifact@v2
    #  with:
    #    name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
    #    path: packaged/bin/**
