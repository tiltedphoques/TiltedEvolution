name: Build docker

on:
  push:
    branches:
      - "master"
      - "dev"
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets:
          [
            { arch: "x86_64", platform: "linux/amd64", build_dir: "x86_64" },
            { arch: "aarch64", platform: "linux/arm64", build_dir: "arm64-v8a" },
          ]
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            tiltedphoques/st-reborn-server
          flavor: |
            latest=false
            suffix=-${{ matrix.targets.arch }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.targets.platform }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=1
            arch=${{ matrix.targets.arch }}
            build_dir=${{ matrix.targets.build_dir }}
          platforms: ${{ matrix.targets.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            tiltedphoques/st-reborn-server
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          set -x
          tags="${{ steps.meta.outputs.tags }}"
          tags="${tags//$'\n'/' '}"
          for tag in $tags;
          do
            amd_tag=$tag-x86_64
            arm_tag=$tag-aarch64
            docker manifest create $tag \
              $amd_tag \
              $arm_tag
            docker manifest push $tag
          done
