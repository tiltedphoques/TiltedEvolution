#include <Structs/AnimationGraphDescriptorManager.h>
#include <Structs/Fallout4/AnimationGraphDescriptor_Deathclaw.h>

AnimationGraphDescriptor_Deathclaw::AnimationGraphDescriptor_Deathclaw(AnimationGraphDescriptorManager& aManager)
{
    enum Variables
    {
        kSpeedSampled = 0,
        kDirection = 1,
        kSpeed = 2,
        kiSyncIdleLocomotion = 3,
        kiState = 4,
        kiState_DeathclawDefault = 5,
        kIsAttackReady = 6,
        kbEquipOk = 7,
        kblendFast = 8,
        kisAttacking = 9,
        kTurnDelta = 10,
        kbAnimationDriven = 11,
        kbAllowRotation = 12,
        kiState_DeathclawHardTurn = 13,
        kbInCombat = 14,
        kiSyncTurnState = 15,
        kTurnDeltaSmoothed = 16,
        kiSyncSprintState = 17,
        kiState_DeathclawSprint = 18,
        kIsSprinting = 19,
        kLookAtOutOfRange = 20,
        kcamerafromx = 21,
        kcamerafromy = 22,
        kcamerafromz = 23,
        kbCanHeadTrack = 24,
        kIsEquipping = 25,
        kbIsSynced = 26,
        kbGraphDriven = 27,
        kbFreezeDirectionUpdate = 28,
        kbRunning = 29,
        kbBlockMoveStop = 30,
        kiSyncFootState = 31,
        kbAllowWalkEvents = 32,
        kbGraphDrivenRotation = 33,
        kSpeedSmoothed = 34,
        kbFreezeSpeedUpdate = 35,
        kHeadXTwist = 36,
        kHeadYTwist = 37,
        kHeadZTwist = 38,
        kSpineXTwist = 39,
        kSpineYTwist = 40,
        kSpineZTwist = 41,
        kstaggerMagnitude = 42,
        kstaggerDirection = 43,
        kfSpineTwistGainAdj = 44,
        kfTimeStep = 45,
        kfSpineTwistGain = 46,
        kSpineTwist = 47,
        kSpineTwistDamped = 48,
        kIsStaggering = 49,
        kfHeadTwistGain = 50,
        kfHeadTwistGainAdj = 51,
        kcHitReactionBodyPart = 52,
        kiGetUpType = 53,
        kfMaxForce = 54,
        kiAttackState = 55,
        kbSupportedDeathAnim = 56,
        kbCCOnStairs = 57,
        kbCCSupport = 58,
        km_worldFromModelFeedbackGain = 59,
        km_errorOutTranslation = 60,
        km_alignWithGroundRotation = 61,
        kbEnableFootIK = 62,
        kbHeadTrackingEnabled = 63,
        kbGraphWantsHeadTracking = 64,
        kbHeadTrackingDebug = 65,
        kbReactEnabled = 66,
        kbSpineEnabled = 67,
        kHitReactionTimer_Interp = 68, // underscore is space in game
        kbInJumpState = 69,
        kbManualGraphChange = 70,
        kweaponSpeedMult = 71,
        kiIsInSneak = 72,
        kbIsAttackStanding = 73,
        kbAllowHeadTracking = 74,
        kfRandomClipStartTimePercentage = 75,
        kLookAtChest_Enabled = 76,
        kLookAtSpine2_Enabled = 77,
        kbGraphWantsFootIK = 78,
        kbRenderFirstPersonInWorld = 79,
        kPose = 80,
        kbDisableSpineTracking = 81,
        kIsPlayer = 82,
        kbBlockPOVSwitch = 83,
        kbBlockPipboy = 84,
        kbAdjust1stPersonFOV = 85,
        kLookAtOutsideLimit = 86,
        kbForceIdleStop = 87,
        kbDoNotInterrupt = 88,
        kLookAtLimitAngleDeg = 89,
        kLookAtChest_LimitAngleDeg = 90,
        kLookAtNeck_LimitAngleDeg = 91,
        kLookAtHead_LimitAngleDeg = 92,
        kLookAtHead_OnGain = 93,
        kLookAtAdditive = 94,
        kbEnableRoot_IsActiveMod = 95,
        kIsNPC = 96,
        kLookAtOnGain = 97,
        kLookAtOffGain = 98,
        kbTalkableWithItem = 99,
        kiTalkGenerator = 100,
        kbFreezeRotationUpdate = 101,
        kiPcapTalkGenerator = 102,
        kbIsInFlavor = 103,
    };

    uint64_t key = 13518681907060316898;

    AnimationGraphDescriptorManager::Builder s_builder(
        aManager, key,
        AnimationGraphDescriptor(
            {
                kLookAtOutOfRange,
                kbEquipOk,
                kbGraphDrivenRotation,
                kbEnableFootIK,
                kbAnimationDriven,
                kbCCSupport,
                kIsSprinting,
                kbInCombat,
                kbGraphDriven,
                kbInJumpState,
                kisAttacking,
                kbIsAttackStanding,
                kbIsSynced,
                kbGraphWantsHeadTracking,
                kbAllowRotation,
                kIsEquipping,
            },
            {
                kHeadYTwist,
                kTurnDeltaSmoothed,
                kfTimeStep,
                kSpineZTwist,
                kHeadXTwist,
                kSpeed,
                kfSpineTwistGainAdj,
                kSpineYTwist,
                kTurnDelta,
                kSpineXTwist,
                kDirection,
                kstaggerDirection,
                kHitReactionTimer_Interp,
                kHeadZTwist,
                kSpeedSampled,
                kSpeedSmoothed,
                kfHeadTwistGainAdj,
            },
            {
                kiSyncIdleLocomotion,
                kiSyncTurnState,
                kiSyncFootState,
                kcHitReactionBodyPart,
                kiState,
                kiSyncSprintState,
            }));
}
